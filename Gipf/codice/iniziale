scelgo(X,Y,A) | scelgo(X,Y,B) | no(X,Y) :- start(X,Y,A,B).

:- not #count { X,Y : scelgo(X,Y,A) } = 1.


pedina(X,Y,1) :- scelgo(X,Y,D). 


connessa(X,Y,D) :- scelgo(X,Y,D).


connessa(X,Y,1) :- connessa(X,B,1), pedina(X,Y,C), Y=B-2.
nuova(X,B,C) :- connessa(X,Y,1), pedina(X,Y,C), B=Y-2.

connessa(X,Y,2) :- connessa(A,B,2), pedina(X,Y,C), X=A+1, Y=B-1.
nuova(A,B,C) :- connessa(X,Y,2), pedina(X,Y,C), A=X+1, B=Y-1.

connessa(X,Y,3) :- connessa(A,B,3), pedina(X,Y,C), X=A+1, Y=B+1.
nuova(A,B,C) :- connessa(X,Y,3), pedina(X,Y,C), A=X+1, B=Y+1.

connessa(X,Y,4) :- connessa(X,B,4), pedina(X,Y,C), Y=B+2.
nuova(X,B,C) :- connessa(X,Y,4), pedina(X,Y,C), B=Y+2.

connessa(X,Y,5) :- connessa(A,B,5), pedina(X,Y,C), X=A-1, Y=B+1.
nuova(A,B,C) :- connessa(X,Y,5), pedina(X,Y,C), A=X-1, B=Y+1.

connessa(X,Y,6) :- connessa(A,B,6), pedina(X,Y,C), X=A-1, Y=B-1.
nuova(A,B,C) :- connessa(X,Y,6), pedina(X,Y,C), A=X-1, B=Y-1.


nuova(X,Y,C) :- pedina(X,Y,C), scelgo(A,B,D), not connessa(X,Y,D).


:- nuova(X,Y,C), start(X,Y,A,B).


faiQualcosa :- #count { X,Y : connessa(X,Y,D), connessa(A,B,D), celleVicine(X,Y,A,B) } > 3.


















